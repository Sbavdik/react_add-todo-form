{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","isFind","usersFromServer","find","userId","getTodos","App","useState","setTodos","userError","setUserError","titleError","setTitleError","setTitle","userSelected","setUserSelected","action","method","onSubmit","event","preventDefault","currentUser","selectedUser","Math","max","getTodo","current","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c8ea3f4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <section className=\"TodoList\">\n      <article\n        data-id={id}\n        className={classNames('TodoInfo', {\n          'TodoInfo TodoInfo--completed': completed,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        {user && <UserInfo user={user} />}\n      </article>\n    </section>\n  );\n};\n","import { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from './Types/Todo';\nimport { User } from './Types/User';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst isFind = (todo: Todo) => {\n  return usersFromServer.find(user => user.id === todo.userId) || null;\n};\n\nconst getTodos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: isFind(todo),\n}));\n\nconst getTodo = (\n  selectedUser: User,\n  title: string,\n  todos: Todo[],\n): Todo => {\n  const lastId = Math.max(...todos.map(todo => todo.id));\n\n  return ({\n    id: lastId + 1,\n    title,\n    completed: false,\n    userId: selectedUser.id,\n    user: selectedUser,\n  });\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(getTodos);\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [userSelected, setUserSelected] = useState('0');\n\n  const handleInputTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    setTitleError(false);\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelected(event.target.value);\n\n    setUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserSelected('0');\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const currentUser = usersFromServer\n      .find(user => user.name === userSelected) || null;\n\n    if (!currentUser) {\n      setUserError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (currentUser && title) {\n      const todo = getTodo(currentUser, title, getTodos);\n\n      setTodos(current => ([\n        ...current,\n        todo,\n      ]));\n\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleInputTitle}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              value={userSelected}\n              onChange={handleSelectUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.name} key={user.id}>\n\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}